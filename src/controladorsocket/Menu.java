/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package controladorsocket;

import controladorsocket.socket.TCPClientSocket;
import controladorsocket.socket.UDPClientSocket;
import java.awt.Color;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author charles
 */
public class Menu extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    public boolean running = false;

    public Menu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        edtIPSensor = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        edtPortaSensor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        edtIPAtuador = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        edtPortaAtuador = new javax.swing.JTextField();
        radTCP = new javax.swing.JRadioButton();
        radUDP = new javax.swing.JRadioButton();
        btn = new javax.swing.JButton();
        txtTrasnmissoes = new javax.swing.JLabel();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("IP Sensor");

        edtIPSensor.setText("187.183.5.216");

        jLabel3.setText("Porta");

        edtPortaSensor.setText("1001");

        jLabel4.setText("IP Atuador");

        edtIPAtuador.setText("187.183.5.216");

        jLabel5.setText("Porta");

        edtPortaAtuador.setText("1003");

        buttonGroup1.add(radTCP);
        radTCP.setSelected(true);
        radTCP.setText("TCP");

        buttonGroup1.add(radUDP);
        radUDP.setText("UDP");
        radUDP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radUDPActionPerformed(evt);
            }
        });

        btn.setText("Start");
        btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActionPerformed(evt);
            }
        });

        txtTrasnmissoes.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(edtIPAtuador, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(edtPortaAtuador, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(edtIPSensor, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(edtPortaSensor, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(radTCP)
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtTrasnmissoes)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(radUDP)
                                .addGap(18, 18, 18)
                                .addComponent(btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(99, 99, 99))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edtIPSensor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edtPortaSensor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edtIPAtuador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edtPortaAtuador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radTCP)
                    .addComponent(radUDP)
                    .addComponent(btn))
                .addGap(18, 18, 18)
                .addComponent(txtTrasnmissoes)
                .addContainerGap(102, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void radUDPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radUDPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radUDPActionPerformed

    private void btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActionPerformed

        if (btn.getText().equals("Start")) {
             txtTrasnmissoes.setText( "0" );
            running = true;
            Runnable run = null;
            if (radTCP.isSelected()) {
                run = new Runnable() {

                    @Override
                    public void run() {
                        startTCP();
                    }
                };

            } else {
                run = new Runnable() {

                    @Override
                    public void run() {
                        startUPD();
                    }
                };

            }

            new Thread(run).start();
            btn.setText("Stop");

        } else {
            running = false;
            btn.setText("Start");
        }


    }//GEN-LAST:event_btnActionPerformed

    public void startTCP() {
        TCPClientSocket tcpSocketSensor = new TCPClientSocket(edtIPSensor.getText(), Integer.parseInt(edtPortaSensor.getText()));
        TCPClientSocket tcpSocketAtuador = new TCPClientSocket(edtIPAtuador.getText(), Integer.parseInt(edtPortaAtuador.getText()));
        try {
            String text = "";
            int erros = 0;
            long start, end;
            while (running) {
                start = System.nanoTime();
                String sensorVal = tcpSocketSensor.requestValue("0");
                if (sensorVal != null && sensorVal.trim().length() > 0) {
                    tcpSocketAtuador.requestValue(sensorVal);
                    end = System.nanoTime();
                    text += end - start + "\r\n";
                    System.out.println((end-start)+"");
                } else {
                    erros++;
                }
                int cont = (Integer.parseInt(txtTrasnmissoes.getText()));
                cont++;
                txtTrasnmissoes.setText(  cont+"" );
            }
            save(text + "\r\n\r\n" + erros, "tcp.txt");
        } catch (IOException ex) {
        }
    }

    public void startUPD() {
        UDPClientSocket udpSocketSensor = new UDPClientSocket(edtIPSensor.getText(), Integer.parseInt(edtPortaSensor.getText()));
        UDPClientSocket udpSocketAtuador = new UDPClientSocket(edtIPAtuador.getText(), Integer.parseInt(edtPortaAtuador.getText()));
        try {
            String text = "";
            int erros = 0;
            long start, end;
            while (running) {
                start = System.nanoTime();
                String sensorVal = udpSocketSensor.requestValue("0");
                if (sensorVal != null && sensorVal.trim().length() > 0) {
                    udpSocketAtuador.requestValue(sensorVal);
                    end = System.nanoTime();
                    text += end - start + "\r\n";
                } else {
                    erros++;
                }
                int cont = (Integer.parseInt(txtTrasnmissoes.getText()));
                cont++;
                txtTrasnmissoes.setText(  cont+"" );
            }
            save(text + "\r\n\r\n" + erros, "upd.txt");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void save(String text, String filename) {
        PrintWriter writer;
        String path = "/home/charles/Dropbox/SCA/";
        try {
            writer = new PrintWriter(path + filename, "UTF-8");
            writer.println(text);
            writer.close();
        } catch (Exception ex) {
            Logger.getLogger(TCPClientSocket.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField edtIPAtuador;
    private javax.swing.JTextField edtIPSensor;
    private javax.swing.JTextField edtPortaAtuador;
    private javax.swing.JTextField edtPortaSensor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JRadioButton radTCP;
    private javax.swing.JRadioButton radUDP;
    private javax.swing.JLabel txtTrasnmissoes;
    // End of variables declaration//GEN-END:variables
}
